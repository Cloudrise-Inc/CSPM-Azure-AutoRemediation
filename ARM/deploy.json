{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "defaultValue": "[concat('fnapp', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "netskopeFQDN": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Netskope tenant fully qualified domain name."
            }
        },
        "apiToken": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Netskope tenant API token."
            }
        },
        "timestampContainer": {
            "type": "string",
            "defaultValue": "dlp-alerts-timestamps",
            "metadata": {
                "description": "The azure storage container which houses the remediation cursor timestamps."
            }
        },
        "deleteActionEnable": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable the delete Autoremediation action."
            }
        },
        "deleteMatchPolicies": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the delete action to this comma separated list of DLP Policies."
            }
        },
        "deleteMatchProfiles": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the delete action to this comma separated list of DLP Profiles."
            }
        },
        "deleteMatchRules": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the delete action to this comma separated list of DLP Rules."
            }
        },
        "deleteTombstoneContent": {
            "type": "string",
            "defaultValue": "This object has been deleted due to security policy.\nPolicy: {policy}\nProfile: {profile}\nRule: {rule}",
            "metadata": {
                "description": "The content of the Tombstone txt file dropped in place of the deleted file. The placeholders {policy} {profile} or {rule} within the content will be replaced with the policy profile and rule that matched for the object."
            }
        },
        "labelActionEnable": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable the Label Autoremediation action."
            }
        },
        "labelMatchPolicies": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the label action to this comma separated list of DLP Policies."
            }
        },
        "labelMatchProfiles": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the label action to this comma separated list of DLP Profiles."
            }
        },
        "labelMatchRules": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the label action to this comma separated list of DLP Rules."
            }
        },
        "containerLabel": {
            "type": "string",
            "defaultValue": "DLP Alert for Policy: {policy} Profile: {profile} Rule: {rule}",
            "metadata": {
                "description": "The container label to attach to the container metadata key is \"DLPScanScanLabel\". The placeholders {policy} {profile} or {rule} within the label will be replaced with the policy profile and rule that matched for the object."
            }
        },
        "blobLabel": {
            "type": "string",
            "defaultValue": "DLP Alert for Policy: {policy} Profile: {profile} Rule: {rule}",
            "metadata": {
                "description": "The blob label to attach to the blob metadata key is \"DLPScanScanLabel\". The placeholders {policy} {profile} or {rule} within the label will be replaced with the policy profile and rule that matched for the object."
            }
        },
        "quarantineActionEnable": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable the quarantine Autoremediation action."
            }
        },
        "quarantineMatchPolicies": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the quarantine action to this comma separated list of DLP Policies."
            }
        },
        "quarantineMatchProfiles": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the quarantine action to this comma separated list of DLP Profiles."
            }
        },
        "quarantineMatchRules": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Apply the quarantine action to this comma separated list of DLP Rules."
            }
        },
        "quarantineContainer": {
            "type": "string",
            "defaultValue": "quarantined-blobs",
            "metadata": {
                "description": "The name of the quarantine storage container."
            }
        },
        "quarantineTombstoneContent": {
            "type": "string",
            "defaultValue": "This object has been quarantined due to security policy.\nPolicy: {policy}\nProfile: {profile}\nRule: {rule}",
            "metadata": {
                "description": "The content of the Tombstone txt file dropped in place of the quarantined file. The placeholders {policy} {profile} or {rule} within the content will be replaced with the policy profile and rule that matched for the object."
            }
        }
    },
    "variables": {
        "functionAppName": "[parameters('appName')]",
        "hostingPlanName": "[parameters('appName')]",
        "applicationInsightsName": "[parameters('appName')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'appstore')]"
    },
    "resources": [
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-08-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_0",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-03-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ],
            "properties": {
                "reserved": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "linuxFxVersion": "python|3.9",
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "DLP_SCAN_RESULT_STORAGE",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "NETSKOPE_FQDN",
                            "value": "[parameters('netskopeFQDN')]"
                        },
                        {
                            "name": "NETSKOPE_TOKEN",
                            "value": "[parameters('apiToken')]"
                        },
                        {
                            "name": "TIMESTAMP_CONTAINER",
                            "value": "[parameters('timestampContainer')]"
                        },
                        {
                            "name": "DELETE_ACTION",
                            "value": "[parameters('deleteActionEnable')]"
                        },
                        {
                            "name": "DELETE_MATCH_POLICIES",
                            "value": "[parameters('deleteMatchPolicies')]"
                        },
                        {
                            "name": "DELETE_MATCH_PROFILES",
                            "value": "[parameters('deleteMatchProfiles')]"
                        },
                        {
                            "name": "DELETE_MATCH_RULES",
                            "value": "[parameters('deleteMatchRules')]"
                        },
                        {
                            "name": "DELETE_TOMBSTONE_CONTENT",
                            "value": "[parameters('deleteTombstoneContent')]"
                        },
                        {
                            "name": "LABEL_ACTION",
                            "value": "[parameters('labelActionEnable')]"
                        },
                        {
                            "name": "LABEL_MATCH_POLICIES",
                            "value": "[parameters('labelMatchPolicies')]"
                        },
                        {
                            "name": "LABEL_MATCH_PROFILES",
                            "value": "[parameters('labelMatchProfiles')]"
                        },
                        {
                            "name": "LABEL_MATCH_RULES",
                            "value": "[parameters('labelMatchRules')]"
                        },
                        {
                            "name": "CONTAINER_LABEL",
                            "value": "[parameters('containerLabel')]"
                        },
                        {
                            "name": "BLOB_LABEL",
                            "value": "[parameters('blobLabel')]"
                        },
                        {
                            "name": "QUARANTINE_ACTION",
                            "value": "[parameters('quarantineActionEnable')]"
                        },
                        {
                            "name": "QUARANTINE_MATCH_POLICIES",
                            "value": "[parameters('quarantineMatchPolicies')]"
                        },
                        {
                            "name": "QUARANTINE_MATCH_PROFILES",
                            "value": "[parameters('quarantineMatchProfiles')]"
                        },
                        {
                            "name": "QUARANTINE_MATCH_RULES",
                            "value": "[parameters('quarantineMatchRules')]"
                        },
                        {
                            "name": "QUARANTINE_CONTAINER",
                            "value": "[parameters('quarantineContainer')]"
                        },
                        {
                            "name": "QUARANTINE_TOMBSTONE_CONTENT",
                            "value": "[parameters('quarantineTombstoneContent')]"
                        }
                    ]
                }
            }
        }
    ]
}